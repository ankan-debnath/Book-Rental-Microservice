"""rental tables: book_id datatype int->str

Revision ID: 2711d79f1765
Revises: c822e4207d94
Create Date: 2025-04-13 12:55:37.648586

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2711d79f1765'
down_revision: Union[str, None] = 'c822e4207d94'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    def upgrade():
        # 1. Rename current table
        op.rename_table("rentals", "rentals_old")

        # 2. Recreate the new rentals table with updated schema
        op.create_table(
            "rentals",
            sa.Column("id", sa.Integer, primary_key=True, autoincrement=True),
            sa.Column("user_id", sa.String(length=36), nullable=False),
            sa.Column("book_id", sa.String(length=36), nullable=False)
            # Add other fields if needed
        )

        # 3. Copy data from old table to new, casting book_id to string
        op.execute("""
            INSERT INTO rentals (id, user_id, book_id)
            SELECT id, user_id, CAST(book_id AS TEXT)
            FROM rentals_old
        """)

        # 4. Drop the old table
        op.drop_table("rentals_old")

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('rentals', 'book_id',
               existing_type=sa.String(length=36),
               type_=sa.INTEGER(),
               existing_nullable=False)
    # ### end Alembic commands ###
